##
# Users controller generated by sorcery gem. Users can add other users and edit
# them.
class UsersController < ApplicationController
  before_action :set_user, only: [:show, :edit, :update, :destroy]
  before_filter :zero_users_or_authenticated, only: [:new, :create]
  before_filter :require_login, except: [:new, :create]
  # GET /users
  # GET /users.json

  ##
  # Lists all users. 
  # routes:
  # - /users
  def index
    @users = User.all
  end

  # GET /users/1
  # GET /users/1.json
  ##
  # Shows selected user.
  # routes:
  # - /users/:id
  def show
  end

  # GET /users/new

  ##
  # New user form.
  # routes:
  # - /users/new
  def new
    @user = User.new
  end

  # GET /users/1/edit
  ##
  # Edit chosen user form
  # routes:
  # - /users/:id/edit 
  def edit
  end

  # POST /users
  # POST /users.json
  ##
  # Creates user. Redirects to created user.
  def create
    @user = User.new(user_params)

    respond_to do |format|
      if @user.save
        format.html { redirect_to @user, notice: 'Użytkownik został pomyślnie utworzony.' }
        format.json { render :show, status: :created, location: @user }
      else
        format.html { render :new }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /users/1
  # PATCH/PUT /users/1.json
  ##
  # Updates edited user.
  # routes:
  # - /users/:id
  def update
    respond_to do |format|
      if @user.update(user_params)
        format.html { redirect_to @user, notice: 'Użytkownik został pomyślnie usunięty.' }
        format.json { render :show, status: :ok, location: @user }
      else
        format.html { render :edit }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /users/1
  # DELETE /users/1.json
  ##
  # Deletes selected user. Redirects to users index.
  # routes:
  # -/users/:id
  def destroy
    @user.destroy
    respond_to do |format|
      format.html { redirect_to users_url, notice: 'User was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  ##
  # Allows to create new users if there is zero users in system OR if 
  # user is logged in
  def zero_users_or_authenticated
    unless User.count == 0 || current_user
      redirect_to root_path
      return false
    end
  end

  private
    ##
    # Use callbacks to share common setup or constraints between actions.
    def set_user
      @user = User.find(params[:id])
    end

    def user_params
      params.require(:user).permit(:username, :email, :password, :password_confirmation)
    end
end

